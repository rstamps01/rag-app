# File Path: /home/vastdata/rag-app/backend/Dockerfile
# Description: Dockerfile for the RAG application backend service.

# === Base Image ===
# Use NVIDIA CUDA 12.8 runtime image on Ubuntu 22.04 for RTX 5090 compatibility.
FROM nvidia/cuda:12.8.0-runtime-ubuntu22.04

# === Working Directory ===
WORKDIR /app

# === System Dependencies ===
# Install essential build tools, Python, pip, and git.
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-dev \
    build-essential \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# === Python Dependencies ===
# Copy only the requirements file first to leverage Docker cache.
COPY requirements.txt .
# Install Python packages listed in requirements.txt.
RUN pip3 install --no-cache-dir -r requirements.txt

# === PyTorch Installation for CUDA 12.8 ===
# Install PyTorch 2.7.0, torchvision, and torchaudio compatible with CUDA 12.8.
# This is done separately to ensure the correct CUDA version is used.
# RUN pip3 install torch==2.7.0 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128
# RUN pip3 install torch torchvision --index-url https://download.pytorch.org/whl/cu128
RUN pip3 install --pre torch torchvision --index-url https://download.pytorch.org/whl/nightly/cu128

# === Application Code ===
# Copy the entire application code into the container.
# This includes the core logic, API routes (including monitoring), etc.
COPY app/ ./app/

# === Environment Variables ===
# Set the Python path so modules can be imported correctly.
ENV PYTHONPATH=/app
# Ensure Python output is sent straight to terminal without buffering.
ENV PYTHONUNBUFFERED=1

# === Port Exposure ===
# Expose the port the FastAPI application will run on.
EXPOSE 8000

# === Run Command ===
# Command to start the Uvicorn server for the FastAPI application.
# Runs on all interfaces (0.0.0.0) inside the container.
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

